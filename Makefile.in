# Makefile.in
#
# Copyright Â© 2012, 2013 Brandon Invergo <brandon@invergo.net>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

# List whatever files you want to include in your source distribution here.
# You can include whole directories but note that *everything* under that
# directory will be included
DISTFILES = PKG-INFO Makefile.in configure install-sh rhasspy-lisa-odas-hermes

DESTDIR =
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_DISTNAME = ${PACKAGE_NAME}-${PACKAGE_VERSION}
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
VIRTUALENV = @VIRTUALENV@
IN_PLACE = @IN_PLACE@
SHELL = @SHELL@
MKDIR_P = @MKDIR_P@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
exec_prefix = @exec_prefix@
includedir = @includedir@
infodir = @infodir@
prefix = @prefix@
srcdir = @abs_srcdir@
datadir = @datadir@
datarootdir = @datarootdir@
pkgdatadir = $(datadir)/@PACKAGE_NAME@
pkgincludedir = $(includedir)/@PACKAGE_NAME@

# -----------------------------------------------------------------------------
# Dependencies
# -----------------------------------------------------------------------------

BUILD_DIR ?= $(srcdir)/build
DOWNLOAD_DIR ?= $(srcdir)/download
DO_DOWNLOAD ?= curl -sSfL -o
ODAS_INIPARSE ?= $(srcdir)/lisa-odas/app/lisa-ODAS-receiver/iniparser
ODAS_LIB ?= $(srcdir)/lisa-odas

DOCKER_ARCH = @DOCKER_ARCH@

# -----------------------------------------------------------------------------

VENV_DIR = $(DESTDIR)$(prefix)
VENV_PYTHON = $(VENV_DIR)/bin/python
VIRTUALENV_FLAGS ?= --clear

ifeq ($(VIRTUALENV),yes)
  INSTALL_PYTHON=$(VENV_PYTHON)
else # VIRTUALENV == yes
  INSTALL_PYTHON=$(PYTHON)
endif # VIRTUALENV == yes

.PHONY: all install uninstall distclean clean dist check installdirs build-odas

all: download-init build-init build-odas

.PHONY: install-init install-dependencies install-service
install: installdirs \
         install-init \
         install-dependencies \
         install-service 

install-init:
ifeq ($(VIRTUALENV),yes)
	"$(PYTHON)" -m venv $(VIRTUALENV_FLAGS) "$(VENV_DIR)" || "$(PYTHON)" -m venv "$(VENV_DIR)"
	"$(VENV_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) --upgrade pip
	"$(VENV_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) wheel || true
	"$(VENV_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) setuptools
endif # VIRTUALENV == yes

install-dependencies:

install-service:
ifeq ($(IN_PLACE),yes)
	"$(INSTALL_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) -r "$(srcdir)/requirements.txt"
	"$(INSTALL_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) -r "$(srcdir)/requirements_dev.txt" || true
else # IN_PLACE == yes
	"$(INSTALL_PYTHON)" -m pip install $(PIP_INSTALL_ARGS) "$(srcdir)"
endif # IN_PLACE == yes
	chmod +x "$(srcdir)/rhasspy-lisa-odas-hermes"

build-odas:
ifneq ("$(wildcard $(ODAS_LIB))","")  
	echo "$(ODAS_LIB) exists, delete it or call make distclean"  
else  
	git clone https://github.com/lawrence-iviani/lisa-odas.git 
endif
	echo Building iniparse dependency
	cd "$(ODAS_INIPARSE)" && make
	echo Building odas-lisa 
	$(MKDIR_P) "$(ODAS_LIB)/build"
	cd "$(ODAS_LIB)/build" && cmake .. 
	

# -----------------------------------------------------------------------------

.PHONY: download-init
download-init:
	$(MKDIR_P) "$(DOWNLOAD_DIR)"

.PHONY: build-init
build-init:
	$(MKDIR_P) "$(BUILD_DIR)"
	
# -----------------------------------------------------------------------------

uninstall:
ifeq ($(VIRTUALENV),yes)
	rm -rvf "$(VENV_DIR)"
endif


# Delete downloaded binaries and build artifacts
clean:
	"$(PYTHON)" setup.py clean
	rm -rvf "$(BUILD_DIR)"
	rm -rvf "$(ODAS_LIB)/build"
	rm -rvf "$(ODAS_LIB)/lib"
	rm -rvf "$(ODAS_LIB)/bin"


# Clean up the output of configure
distclean:
	rm -v "$(srcdir)/config.log"
	rm -v "$(srcdir)/config.status"
	rm -rvf "$(srcdir)/autom4te.cache"
	rm -v "$(srcdir)/Makefile"
	rm -v "$(ODAS_LIB)"

# You can either use the setup.py sdist command or you can roll your own here
dist:
	"$(PYTHON)" setup.py sdist

# setup.py might complain if a directory doesn't exist so just in case, make the directory
# here
installdirs:
	$(MKDIR_P) "$(DESTDIR)$(prefix)"

# -----------------------------------------------------------------------------

.PHONY: check reformat test

check:
	scripts/check-code.sh

reformat:
	scripts/format-code.sh

test:
	scripts/check-code.sh
